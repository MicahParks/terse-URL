// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Visit visit
//
// swagger:model Visit
type Visit struct {

	// accessed
	// Required: true
	// Format: date-time
	Accessed *strfmt.DateTime `json:"accessed"`

	// headers
	Headers map[string][]string `json:"headers,omitempty"`

	// ip
	// Required: true
	IP *string `json:"ip"`
}

// Validate validates this visit
func (m *Visit) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccessed(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIP(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Visit) validateAccessed(formats strfmt.Registry) error {

	if err := validate.Required("accessed", "body", m.Accessed); err != nil {
		return err
	}

	if err := validate.FormatOf("accessed", "body", "date-time", m.Accessed.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *Visit) validateIP(formats strfmt.Registry) error {

	if err := validate.Required("ip", "body", m.IP); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this visit based on context it is used
func (m *Visit) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Visit) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Visit) UnmarshalBinary(b []byte) error {
	var res Visit
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
