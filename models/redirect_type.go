// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// RedirectType redirect type
//
// swagger:model RedirectType
type RedirectType string

const (

	// RedirectTypeNr301 captures enum value "301"
	RedirectTypeNr301 RedirectType = "301"

	// RedirectTypeNr302 captures enum value "302"
	RedirectTypeNr302 RedirectType = "302"

	// RedirectTypeMetaTags captures enum value "metaTags"
	RedirectTypeMetaTags RedirectType = "metaTags"

	// RedirectTypeJs captures enum value "js"
	RedirectTypeJs RedirectType = "js"
)

// for schema
var redirectTypeEnum []interface{}

func init() {
	var res []RedirectType
	if err := json.Unmarshal([]byte(`["301","302","metaTags","js"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		redirectTypeEnum = append(redirectTypeEnum, v)
	}
}

func (m RedirectType) validateRedirectTypeEnum(path, location string, value RedirectType) error {
	if err := validate.EnumCase(path, location, value, redirectTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this redirect type
func (m RedirectType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateRedirectTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
