// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TerseInput terse input
//
// swagger:model TerseInput
type TerseInput struct {

	// media preview
	MediaPreview *MediaPreview `json:"mediaPreview,omitempty"`

	// original URL
	// Required: true
	OriginalURL string `json:"originalURL"`

	// redirect type
	RedirectType RedirectType `json:"redirectType,omitempty"`

	// shortened URL
	ShortenedURL string `json:"shortenedURL,omitempty"`
}

// Validate validates this terse input
func (m *TerseInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMediaPreview(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOriginalURL(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRedirectType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TerseInput) validateMediaPreview(formats strfmt.Registry) error {
	if swag.IsZero(m.MediaPreview) { // not required
		return nil
	}

	if m.MediaPreview != nil {
		if err := m.MediaPreview.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("mediaPreview")
			}
			return err
		}
	}

	return nil
}

func (m *TerseInput) validateOriginalURL(formats strfmt.Registry) error {

	if err := validate.RequiredString("originalURL", "body", m.OriginalURL); err != nil {
		return err
	}

	return nil
}

func (m *TerseInput) validateRedirectType(formats strfmt.Registry) error {
	if swag.IsZero(m.RedirectType) { // not required
		return nil
	}

	if err := m.RedirectType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("redirectType")
		}
		return err
	}

	return nil
}

// ContextValidate validate this terse input based on the context it is used
func (m *TerseInput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateMediaPreview(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateRedirectType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TerseInput) contextValidateMediaPreview(ctx context.Context, formats strfmt.Registry) error {

	if m.MediaPreview != nil {
		if err := m.MediaPreview.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("mediaPreview")
			}
			return err
		}
	}

	return nil
}

func (m *TerseInput) contextValidateRedirectType(ctx context.Context, formats strfmt.Registry) error {

	if err := m.RedirectType.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("redirectType")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TerseInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TerseInput) UnmarshalBinary(b []byte) error {
	var res TerseInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
