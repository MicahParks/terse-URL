// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TerseOptionalShortened terse optional shortened
//
// swagger:model TerseOptionalShortened
type TerseOptionalShortened struct {

	// media preview
	MediaPreview *MediaPreview `json:"mediaPreview,omitempty"`

	// original URL
	// Required: true
	OriginalURL *string `json:"originalURL"`

	// shortened URL
	ShortenedURL string `json:"shortenedURL,omitempty"`
}

// Validate validates this terse optional shortened
func (m *TerseOptionalShortened) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMediaPreview(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOriginalURL(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TerseOptionalShortened) validateMediaPreview(formats strfmt.Registry) error {
	if swag.IsZero(m.MediaPreview) { // not required
		return nil
	}

	if m.MediaPreview != nil {
		if err := m.MediaPreview.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("mediaPreview")
			}
			return err
		}
	}

	return nil
}

func (m *TerseOptionalShortened) validateOriginalURL(formats strfmt.Registry) error {

	if err := validate.Required("originalURL", "body", m.OriginalURL); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this terse optional shortened based on the context it is used
func (m *TerseOptionalShortened) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateMediaPreview(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TerseOptionalShortened) contextValidateMediaPreview(ctx context.Context, formats strfmt.Registry) error {

	if m.MediaPreview != nil {
		if err := m.MediaPreview.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("mediaPreview")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TerseOptionalShortened) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TerseOptionalShortened) UnmarshalBinary(b []byte) error {
	var res TerseOptionalShortened
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
