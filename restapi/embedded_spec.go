// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Terse URL shortener.",
    "title": "terseurl",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost",
  "basePath": "/",
  "paths": {
    "/api/alive": {
      "get": {
        "description": "Used by Caddy or other reverse proxy to determine if the service is alive.",
        "tags": [
          "system"
        ],
        "summary": "Used by Caddy or other reverse proxy to determine if the service is alive.",
        "operationId": "systemAlive",
        "responses": {
          "200": {
            "description": "Service is alive."
          }
        }
      }
    },
    "/api/export": {
      "post": {
        "description": "Export Terse and Visits data for the given shortened URLs. If shortenedURLs is null, then export all shortened URLs.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Export Terse and Visits data for the given shortened URLs.",
        "operationId": "export",
        "parameters": [
          {
            "description": "The shortened URLs to get the export for. If null, an export of all shortened URLs will be given.",
            "name": "shortenedURLs",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The export was successfully retrieved.",
            "schema": {
              "additionalProperties": {
                "x-nullable": true,
                "$ref": "#/definitions/Export"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/frontend/meta": {
      "post": {
        "description": "This endpoint is intended for use only by the frontend. It will perform an HTTP GET request to the originalURL, extract all meta tag information for social media link previews, then return it.",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Used by the frontend to inherit HTML meta for social media link previews.",
        "operationId": "frontendMeta",
        "parameters": [
          {
            "description": "The original URL to HTTP GET and extract the relevant HTML meta from for social media link previews.",
            "name": "originalURL",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The relevant HTML meta tag information.",
            "schema": {
              "type": "object",
              "properties": {
                "og": {
                  "$ref": "#/definitions/OpenGraph"
                },
                "twitter": {
                  "$ref": "#/definitions/Twitter"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/import": {
      "post": {
        "description": "Any imported data will overwrite existing data. Unless deletion information is specified. In that case all Terse or Visits data can be deleted before importing the new data.",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Import existing Terse and Visits data for the given shortened URLs.",
        "operationId": "import",
        "parameters": [
          {
            "description": "A JSON object containing the deletion information. If Terse or Visits data is marked for deletion, it will all be deleted. An object matching shortened URLs to their previously exported data is also required.",
            "name": "import",
            "in": "body",
            "required": true,
            "schema": {
              "additionalProperties": {
                "x-nullable": true,
                "$ref": "#/definitions/Export"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The import request was successfully fulfilled."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/prefix": {
      "get": {
        "description": "Provides the HTTP prefix all shortened URLs have.",
        "tags": [
          "api"
        ],
        "summary": "Client's web browser is requesting what HTTP prefix all shortened URLs have.",
        "operationId": "shortenedPrefix",
        "responses": {
          "200": {
            "description": "The HTTP prefix all shortened URLs have.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/shortened": {
      "delete": {
        "description": "Delete all assets for the given shortened URLs. This includes all Terse data, Visits data, and Summary data.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Delete all assets for the given shortened URLs.",
        "operationId": "shortenedDelete",
        "parameters": [
          {
            "description": "The shortened URLs whose data should be deleted.",
            "name": "shortenedURLs",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The shortened URL's data was successfully deleted from the backend storage."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/summary": {
      "post": {
        "description": "Summary data includes the shortened URL, the original URL, the type of redirect, and the number of visits.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Provide Summary data for the requested shortened URLs.",
        "operationId": "shortenedSummary",
        "parameters": [
          {
            "description": "The array of shortened URLs to get Summary data for. If none is provided, all will summaries will be returned.",
            "name": "shortenedURLs",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The map of shortened URLs to Summary data.",
            "schema": {
              "additionalProperties": {
                "x-nullable": true,
                "$ref": "#/definitions/Summary"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/terse": {
      "post": {
        "description": "Read the Terse data for the given shortened URL.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Read the Terse data for the given shortened URL.",
        "operationId": "terseRead",
        "parameters": [
          {
            "description": "The shortened URL to get the Terse data for.",
            "name": "shortenedURL",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Terse data was successfully retrieved.",
            "schema": {
              "additionalProperties": {
                "x-nullable": true,
                "$ref": "#/definitions/Terse"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/visits": {
      "post": {
        "description": "Read the Visits data for the given shortened URLs.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Read the Visits data for the given shortened URLs.",
        "operationId": "visitsRead",
        "parameters": [
          {
            "description": "The shortened URL to get the Visits data for.",
            "name": "shortenedURL",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Visits data was successfully retrieved.",
            "schema": {
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Visit"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "Delete all Visits data for the given shortened URLs. This will affect Summary data.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Delete all Visits data for the given shortened URLs.",
        "operationId": "visitsDelete",
        "parameters": [
          {
            "description": "The shortened URLs whose Visits data should be deleted.",
            "name": "shortenedURLs",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The shortened URL's Visits data was successfully deleted from the backend storage."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/write/{operation}": {
      "post": {
        "description": "\"insert\" will fail if the shortened URL already exists. \"update\" will fail if the shortened URL does not already exist. \"upsert\" will only fail if there is a failure interacting with the underlying storage. If no shortened URL is included in the given Terse data, one will be generated randomly and returned in the response.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Perform a write operation on Terse data for a given shortened URL.",
        "operationId": "terseWrite",
        "parameters": [
          {
            "description": "The Terse data, with an optional shortened URL. If no shortened URL is given, one will be generated randomly and returned in the response. If no redirect type is given, 302 is used.",
            "name": "terse",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TerseInput"
            }
          },
          {
            "enum": [
              "insert",
              "update",
              "upsert"
            ],
            "type": "string",
            "description": "The write operation to perform with the Terse data.",
            "name": "operation",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The write operation was successful.",
            "schema": {
              "description": "The shortened URL affected.",
              "type": "string"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/{shortenedURL}": {
      "get": {
        "description": "Use the shortened URL. It will redirect to the full URL if it has not expired.",
        "produces": [
          "text/html"
        ],
        "tags": [
          "public"
        ],
        "summary": "Typically a web browser would visit this endpoint, then get redirected.",
        "operationId": "publicRedirect",
        "parameters": [
          {
            "type": "string",
            "name": "shortenedURL",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The HTML document containing a social media link preview and or JavaScript fingerprinting. Any visitor will be automatically redirected to the original link with JavaScript.",
            "schema": {
              "type": "file"
            }
          },
          "301": {
            "description": "An HTTP response that will server as a permanent redirect to the shortened URL's full URL.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The full URL that the redirect leads to."
              }
            }
          },
          "302": {
            "description": "An HTTP response that will serve as a temporary redirect to the shortened URL's full URL.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The full URL that the redirect leads to."
              }
            }
          },
          "404": {
            "description": "The shortened URL expired or never existed."
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "x-nullable": false
        },
        "message": {
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "Export": {
      "type": "object",
      "properties": {
        "terse": {
          "$ref": "#/definitions/Terse"
        },
        "visits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Visit"
          }
        }
      }
    },
    "MediaPreview": {
      "properties": {
        "og": {
          "$ref": "#/definitions/OpenGraph"
        },
        "title": {
          "type": "string"
        },
        "twitter": {
          "$ref": "#/definitions/Twitter"
        }
      }
    },
    "OpenGraph": {
      "additionalProperties": {
        "type": "string"
      }
    },
    "RedirectType": {
      "type": "string",
      "enum": [
        "301",
        "302",
        "meta",
        "js"
      ]
    },
    "Summary": {
      "properties": {
        "terse": {
          "$ref": "#/definitions/TerseSummary"
        },
        "visits": {
          "$ref": "#/definitions/VisitsSummary"
        }
      }
    },
    "Terse": {
      "required": [
        "originalURL",
        "shortenedURL"
      ],
      "properties": {
        "javascriptTracking": {
          "type": "boolean"
        },
        "mediaPreview": {
          "$ref": "#/definitions/MediaPreview"
        },
        "originalURL": {
          "type": "string",
          "x-nullable": false
        },
        "redirectType": {
          "$ref": "#/definitions/RedirectType"
        },
        "shortenedURL": {
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "TerseInput": {
      "required": [
        "originalURL"
      ],
      "properties": {
        "javascriptTracking": {
          "type": "boolean"
        },
        "mediaPreview": {
          "$ref": "#/definitions/MediaPreview"
        },
        "originalURL": {
          "type": "string",
          "x-nullable": false
        },
        "redirectType": {
          "$ref": "#/definitions/RedirectType"
        },
        "shortenedURL": {
          "type": "string"
        }
      }
    },
    "TerseSummary": {
      "properties": {
        "originalURL": {
          "type": "string"
        },
        "redirectType": {
          "$ref": "#/definitions/RedirectType"
        },
        "shortenedURL": {
          "type": "string"
        }
      }
    },
    "Twitter": {
      "additionalProperties": {
        "type": "string"
      }
    },
    "Visit": {
      "required": [
        "accessed",
        "ip"
      ],
      "properties": {
        "accessed": {
          "type": "string",
          "format": "date-time"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "ip": {
          "type": "string"
        }
      }
    },
    "VisitsSummary": {
      "properties": {
        "visitCount": {
          "type": "integer",
          "format": "uint"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Endpoints to perform operations on Terse data.",
      "name": "api"
    },
    {
      "description": "Endpoints that are publicly accessible.",
      "name": "public"
    },
    {
      "description": "Endpoints required by the system that are not public facing and do not affect Terse data.",
      "name": "system"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Terse URL shortener.",
    "title": "terseurl",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost",
  "basePath": "/",
  "paths": {
    "/api/alive": {
      "get": {
        "description": "Used by Caddy or other reverse proxy to determine if the service is alive.",
        "tags": [
          "system"
        ],
        "summary": "Used by Caddy or other reverse proxy to determine if the service is alive.",
        "operationId": "systemAlive",
        "responses": {
          "200": {
            "description": "Service is alive."
          }
        }
      }
    },
    "/api/export": {
      "post": {
        "description": "Export Terse and Visits data for the given shortened URLs. If shortenedURLs is null, then export all shortened URLs.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Export Terse and Visits data for the given shortened URLs.",
        "operationId": "export",
        "parameters": [
          {
            "description": "The shortened URLs to get the export for. If null, an export of all shortened URLs will be given.",
            "name": "shortenedURLs",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The export was successfully retrieved.",
            "schema": {
              "additionalProperties": {
                "x-nullable": true,
                "$ref": "#/definitions/Export"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/frontend/meta": {
      "post": {
        "description": "This endpoint is intended for use only by the frontend. It will perform an HTTP GET request to the originalURL, extract all meta tag information for social media link previews, then return it.",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Used by the frontend to inherit HTML meta for social media link previews.",
        "operationId": "frontendMeta",
        "parameters": [
          {
            "description": "The original URL to HTTP GET and extract the relevant HTML meta from for social media link previews.",
            "name": "originalURL",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The relevant HTML meta tag information.",
            "schema": {
              "type": "object",
              "properties": {
                "og": {
                  "$ref": "#/definitions/OpenGraph"
                },
                "twitter": {
                  "$ref": "#/definitions/Twitter"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/import": {
      "post": {
        "description": "Any imported data will overwrite existing data. Unless deletion information is specified. In that case all Terse or Visits data can be deleted before importing the new data.",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Import existing Terse and Visits data for the given shortened URLs.",
        "operationId": "import",
        "parameters": [
          {
            "description": "A JSON object containing the deletion information. If Terse or Visits data is marked for deletion, it will all be deleted. An object matching shortened URLs to their previously exported data is also required.",
            "name": "import",
            "in": "body",
            "required": true,
            "schema": {
              "additionalProperties": {
                "x-nullable": true,
                "$ref": "#/definitions/Export"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The import request was successfully fulfilled."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/prefix": {
      "get": {
        "description": "Provides the HTTP prefix all shortened URLs have.",
        "tags": [
          "api"
        ],
        "summary": "Client's web browser is requesting what HTTP prefix all shortened URLs have.",
        "operationId": "shortenedPrefix",
        "responses": {
          "200": {
            "description": "The HTTP prefix all shortened URLs have.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/shortened": {
      "delete": {
        "description": "Delete all assets for the given shortened URLs. This includes all Terse data, Visits data, and Summary data.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Delete all assets for the given shortened URLs.",
        "operationId": "shortenedDelete",
        "parameters": [
          {
            "description": "The shortened URLs whose data should be deleted.",
            "name": "shortenedURLs",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The shortened URL's data was successfully deleted from the backend storage."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/summary": {
      "post": {
        "description": "Summary data includes the shortened URL, the original URL, the type of redirect, and the number of visits.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Provide Summary data for the requested shortened URLs.",
        "operationId": "shortenedSummary",
        "parameters": [
          {
            "description": "The array of shortened URLs to get Summary data for. If none is provided, all will summaries will be returned.",
            "name": "shortenedURLs",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The map of shortened URLs to Summary data.",
            "schema": {
              "additionalProperties": {
                "x-nullable": true,
                "$ref": "#/definitions/Summary"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/terse": {
      "post": {
        "description": "Read the Terse data for the given shortened URL.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Read the Terse data for the given shortened URL.",
        "operationId": "terseRead",
        "parameters": [
          {
            "description": "The shortened URL to get the Terse data for.",
            "name": "shortenedURL",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Terse data was successfully retrieved.",
            "schema": {
              "additionalProperties": {
                "x-nullable": true,
                "$ref": "#/definitions/Terse"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/visits": {
      "post": {
        "description": "Read the Visits data for the given shortened URLs.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Read the Visits data for the given shortened URLs.",
        "operationId": "visitsRead",
        "parameters": [
          {
            "description": "The shortened URL to get the Visits data for.",
            "name": "shortenedURL",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Visits data was successfully retrieved.",
            "schema": {
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Visit"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "Delete all Visits data for the given shortened URLs. This will affect Summary data.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Delete all Visits data for the given shortened URLs.",
        "operationId": "visitsDelete",
        "parameters": [
          {
            "description": "The shortened URLs whose Visits data should be deleted.",
            "name": "shortenedURLs",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The shortened URL's Visits data was successfully deleted from the backend storage."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/write/{operation}": {
      "post": {
        "description": "\"insert\" will fail if the shortened URL already exists. \"update\" will fail if the shortened URL does not already exist. \"upsert\" will only fail if there is a failure interacting with the underlying storage. If no shortened URL is included in the given Terse data, one will be generated randomly and returned in the response.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "api"
        ],
        "summary": "Perform a write operation on Terse data for a given shortened URL.",
        "operationId": "terseWrite",
        "parameters": [
          {
            "description": "The Terse data, with an optional shortened URL. If no shortened URL is given, one will be generated randomly and returned in the response. If no redirect type is given, 302 is used.",
            "name": "terse",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TerseInput"
            }
          },
          {
            "enum": [
              "insert",
              "update",
              "upsert"
            ],
            "type": "string",
            "description": "The write operation to perform with the Terse data.",
            "name": "operation",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The write operation was successful.",
            "schema": {
              "description": "The shortened URL affected.",
              "type": "string"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/{shortenedURL}": {
      "get": {
        "description": "Use the shortened URL. It will redirect to the full URL if it has not expired.",
        "produces": [
          "text/html"
        ],
        "tags": [
          "public"
        ],
        "summary": "Typically a web browser would visit this endpoint, then get redirected.",
        "operationId": "publicRedirect",
        "parameters": [
          {
            "type": "string",
            "name": "shortenedURL",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The HTML document containing a social media link preview and or JavaScript fingerprinting. Any visitor will be automatically redirected to the original link with JavaScript.",
            "schema": {
              "type": "file"
            }
          },
          "301": {
            "description": "An HTTP response that will server as a permanent redirect to the shortened URL's full URL.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The full URL that the redirect leads to."
              }
            }
          },
          "302": {
            "description": "An HTTP response that will serve as a temporary redirect to the shortened URL's full URL.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The full URL that the redirect leads to."
              }
            }
          },
          "404": {
            "description": "The shortened URL expired or never existed."
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "x-nullable": false
        },
        "message": {
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "Export": {
      "type": "object",
      "properties": {
        "terse": {
          "$ref": "#/definitions/Terse"
        },
        "visits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Visit"
          }
        }
      }
    },
    "MediaPreview": {
      "properties": {
        "og": {
          "$ref": "#/definitions/OpenGraph"
        },
        "title": {
          "type": "string"
        },
        "twitter": {
          "$ref": "#/definitions/Twitter"
        }
      }
    },
    "OpenGraph": {
      "additionalProperties": {
        "type": "string"
      }
    },
    "RedirectType": {
      "type": "string",
      "enum": [
        "301",
        "302",
        "meta",
        "js"
      ]
    },
    "Summary": {
      "properties": {
        "terse": {
          "$ref": "#/definitions/TerseSummary"
        },
        "visits": {
          "$ref": "#/definitions/VisitsSummary"
        }
      }
    },
    "Terse": {
      "required": [
        "originalURL",
        "shortenedURL"
      ],
      "properties": {
        "javascriptTracking": {
          "type": "boolean"
        },
        "mediaPreview": {
          "$ref": "#/definitions/MediaPreview"
        },
        "originalURL": {
          "type": "string",
          "x-nullable": false
        },
        "redirectType": {
          "$ref": "#/definitions/RedirectType"
        },
        "shortenedURL": {
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "TerseInput": {
      "required": [
        "originalURL"
      ],
      "properties": {
        "javascriptTracking": {
          "type": "boolean"
        },
        "mediaPreview": {
          "$ref": "#/definitions/MediaPreview"
        },
        "originalURL": {
          "type": "string",
          "x-nullable": false
        },
        "redirectType": {
          "$ref": "#/definitions/RedirectType"
        },
        "shortenedURL": {
          "type": "string"
        }
      }
    },
    "TerseSummary": {
      "properties": {
        "originalURL": {
          "type": "string"
        },
        "redirectType": {
          "$ref": "#/definitions/RedirectType"
        },
        "shortenedURL": {
          "type": "string"
        }
      }
    },
    "Twitter": {
      "additionalProperties": {
        "type": "string"
      }
    },
    "Visit": {
      "required": [
        "accessed",
        "ip"
      ],
      "properties": {
        "accessed": {
          "type": "string",
          "format": "date-time"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "ip": {
          "type": "string"
        }
      }
    },
    "VisitsSummary": {
      "properties": {
        "visitCount": {
          "type": "integer",
          "format": "uint"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Endpoints to perform operations on Terse data.",
      "name": "api"
    },
    {
      "description": "Endpoints that are publicly accessible.",
      "name": "public"
    },
    {
      "description": "Endpoints required by the system that are not public facing and do not affect Terse data.",
      "name": "system"
    }
  ]
}`))
}
