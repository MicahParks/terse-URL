// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/MicahParks/terse-URL/models"
)

// TerseTerseOKCode is the HTTP code returned for type TerseTerseOK
const TerseTerseOKCode int = 200

/*TerseTerseOK The Terse data was successfully retrieved.

swagger:response terseTerseOK
*/
type TerseTerseOK struct {

	/*
	  In: Body
	*/
	Payload *models.Terse `json:"body,omitempty"`
}

// NewTerseTerseOK creates TerseTerseOK with default headers values
func NewTerseTerseOK() *TerseTerseOK {

	return &TerseTerseOK{}
}

// WithPayload adds the payload to the terse terse o k response
func (o *TerseTerseOK) WithPayload(payload *models.Terse) *TerseTerseOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the terse terse o k response
func (o *TerseTerseOK) SetPayload(payload *models.Terse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TerseTerseOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*TerseTerseDefault Unexpected error.

swagger:response terseTerseDefault
*/
type TerseTerseDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewTerseTerseDefault creates TerseTerseDefault with default headers values
func NewTerseTerseDefault(code int) *TerseTerseDefault {
	if code <= 0 {
		code = 500
	}

	return &TerseTerseDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the terse terse default response
func (o *TerseTerseDefault) WithStatusCode(code int) *TerseTerseDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the terse terse default response
func (o *TerseTerseDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the terse terse default response
func (o *TerseTerseDefault) WithPayload(payload *models.Error) *TerseTerseDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the terse terse default response
func (o *TerseTerseDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TerseTerseDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
