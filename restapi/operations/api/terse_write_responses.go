// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/MicahParks/terse-URL/models"
)

// TerseWriteOKCode is the HTTP code returned for type TerseWriteOK
const TerseWriteOKCode int = 200

/*TerseWriteOK The write operation was successful.

swagger:response terseWriteOK
*/
type TerseWriteOK struct {

	/*The shortened URL affected.
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewTerseWriteOK creates TerseWriteOK with default headers values
func NewTerseWriteOK() *TerseWriteOK {

	return &TerseWriteOK{}
}

// WithPayload adds the payload to the terse write o k response
func (o *TerseWriteOK) WithPayload(payload string) *TerseWriteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the terse write o k response
func (o *TerseWriteOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TerseWriteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*TerseWriteDefault Unexpected error.

swagger:response terseWriteDefault
*/
type TerseWriteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewTerseWriteDefault creates TerseWriteDefault with default headers values
func NewTerseWriteDefault(code int) *TerseWriteDefault {
	if code <= 0 {
		code = 500
	}

	return &TerseWriteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the terse write default response
func (o *TerseWriteDefault) WithStatusCode(code int) *TerseWriteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the terse write default response
func (o *TerseWriteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the terse write default response
func (o *TerseWriteDefault) WithPayload(payload *models.Error) *TerseWriteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the terse write default response
func (o *TerseWriteDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TerseWriteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
