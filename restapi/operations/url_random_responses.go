// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/MicahParks/terse-URL/models"
)

// URLRandomOKCode is the HTTP code returned for type URLRandomOK
const URLRandomOKCode int = 200

/*URLRandomOK The shortened URL to visit that will redirect to the given full URL.

swagger:response urlRandomOK
*/
type URLRandomOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewURLRandomOK creates URLRandomOK with default headers values
func NewURLRandomOK() *URLRandomOK {

	return &URLRandomOK{}
}

// WithPayload adds the payload to the url random o k response
func (o *URLRandomOK) WithPayload(payload string) *URLRandomOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the url random o k response
func (o *URLRandomOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *URLRandomOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*URLRandomDefault Unexpected error.

swagger:response urlRandomDefault
*/
type URLRandomDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewURLRandomDefault creates URLRandomDefault with default headers values
func NewURLRandomDefault(code int) *URLRandomDefault {
	if code <= 0 {
		code = 500
	}

	return &URLRandomDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the url random default response
func (o *URLRandomDefault) WithStatusCode(code int) *URLRandomDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the url random default response
func (o *URLRandomDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the url random default response
func (o *URLRandomDefault) WithPayload(payload *models.Error) *URLRandomDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the url random default response
func (o *URLRandomDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *URLRandomDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
