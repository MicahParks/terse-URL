swagger: "2.0"

basePath: "/"

host: "shorten.micahparks.com" # TODO Change if you found this off the internet and want to run it yourself.

info:
  description: "The Terse URL shortener."
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
  title: "Terse URL"
  version: "0.0.1"

tags:
  - description: "Endpoints to perform operations on Terse data."
    name: "api"
  - description: "Endpoints that are publicly accessible."
    name: "public"
  - description: "Endpoints required by the system that are not public facing and do not affect Terse data."
    name: "system"

#schemes:
#  - "https"

paths: # TODO Add summary to all endpoints.
  /api/alive:
    get:
      description: "For Caddy to determine if the upstream provider (this executable) is alive."
      operationId: "alive"
      responses:
        200:
          description: "Service is alive."
      tags:
        - "system"

  /api/delete/{shortened}:
    delete:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Delete the given shortened URL from the backend storage, cause the shortened URL to immediately expire."
      operationId: "terseDelete"
      parameters:
        - in: "body"
          name: "delete"
          required: true
          schema:
            type: "object"
            properties:
              terse:
                default: true
                type: "boolean"
              visits:
                default: true
                type: "boolean"
        - in: "path"
          name: "shortened"
          required: true
          type: "string"
      responses:
        200:
          description: "The shortened URL was successfully deleted from the backend storage."
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      tags:
        - "api"

  /api/dump:
    get:
      produces:
        - "application/json"
      description: ""
      operationId: "terseDump"
      responses:
        200:
          description: ""
          schema:
            type: "object"
            additionalProperties:
              $ref: "#/definitions/Dump"
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      tags:
        - "api"

  /api/dump/{shortened}:
    get:
      produces:
        - "application/json"
      description: ""
      operationId: "terseDumpShortened"
      parameters:
        - in: "path"
          name: "shortened"
          required: true
          type: "string"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/Dump"
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      tags:
        - "api"

  /api/read/{shortened}:
    get:
      produces:
        - "application/json"
      summary: "" # TODO
      operationId: "terseRead"
      parameters:
        - in: "path"
          name: "shortened"
          required: true
          type: "string"
      responses:
        200:
          description: "" # TODO
          schema:
            $ref: "#/definitions/Terse"
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      tags:
        - "api"

  /api/visits/{shortened}:
    get:
      produces:
        - "application/json"
      summary: "" # TODO
      operationId: "terseVisits"
      parameters:
        - in: "path"
          name: "shortened"
          required: true
          type: "string"
      responses:
        200:
          description: "" # TODO
          schema:
            description: "The shortened URL affected."
            type: "array"
            items:
              $ref: "#/definitions/Visit"
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      tags:
        - "api"

  /api/write/{operation}:
    post:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: '' # TODO
      operationId: "terseWrite"
      parameters:
        - in: "body"
          name: "terse"
          required: true
          schema:
            $ref: "#/definitions/TerseOptionalShortened"
        - in: "path"
          enum:
            - "insert"
            - "update"
            - "upsert"
          name: "operation"
          required: true
          type: "string"
      responses:
        200:
          description: "" # TODO
          schema:
            description: "The shortened URL affected."
            type: "string"
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      tags:
        - "api"

  # IDs are always 9 characters or greater, so they can be put at the base path as long as all other paths are 8
  # characters or less.
  /{shortened}:
    get:
      description: "Use the shortened URL. It will redirect to the full URL if it has not expired."
      operationId: "terseRedirect"
      parameters:
        - in: "path"
          name: "shortened"
          required: true
          type: "string"
      responses:
        302:
          description: "The shortened URL to visit that will redirect to the given full URL."
          headers:
            Location:
              description: "The full URL that the redirect leads to."
              type: "string"
        404:
          description: "The shortened URL expired or never existed."
      tags:
        - "public"


definitions:

  # Schema for Terse dump.
  Dump:
    properties:
      terse:
        $ref: "#/definitions/Terse"
      visits:
        type: "array"
        items:
          $ref: "#/definitions/Visit"
    type: "object"

  # Schema for error response body.
  Error:
    properties:
      code:
        type: "integer"
      message:
        type: "string"
    required:
      - "code"
      - "message"
    type: "object"

  # Schema for social media previews.
  MediaPreview:
    properties:
      imageURL:
        type: "string"
      title:
        type: "string"
      type:
        type: "string"
      canonicalURL:
        type: "string"
      audioURL:
        type: "string"
      description:
        type: "string"
      determiner:
        type: "string"
      locale:
        type: "string"
      localeAlt:
        type: "string"
      siteName:
        type: "string"
      videoURL:
        type: "string"
      twitter:
        type: "object"
        $ref: "#/definitions/Twitter"
    required:
      - "imageURL"
      - "title"
      - "type"
      - "canonicalURL"

  # Schema for a Terse URL, which represented a shortened URL and original pair plus metadata.
  Terse:
    properties:
      deleteAt:
        format: "date-time"
        type: "string"
      originalURL:
        type: "string"
      mediaPreview:
        $ref: "#/definitions/MediaPreview"
      shortenedURL:
        type: "string"
    required:
      - "originalURL"
      - "shortenedURL"

  # Schema for a Terse URL, with an optional shortened URL.
  TerseOptionalShortened:
    properties:
      deleteAt:
        format: "date-time"
        type: "string"
      originalURL:
        type: "string"
      mediaPreview:
        $ref: "#/definitions/MediaPreview"
      shortenedURL:
        type: "string"
    required:
      - "originalURL"

  # Schema for Twitter OG meta tags.
  Twitter:
    properties:
      card:
        enum:
          - "app"
          - "player"
          - "summary"
          - "summary_large_image"
        type: "string"
      creator:
        type: "string"
      description:
        type: "string"
      imageURL:
        type: "string"
      site:
        type: "string"
      siteID:
        type: "string"
      streamURL:
        type: "string"
      title:
        type: "string"

  # Schema for tracking visits to shortened links.
  Visit:
    properties:
      accessed:
        type: "string"
        format: "date-time"
      ip:
        type: "string"
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
    required:
      - "accessed"
      - "ip"
