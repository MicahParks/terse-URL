swagger: "2.0"

basePath: "/"

host: "localhost" # TODO Change if you found this off the internet and want to run it yourself.

info:
  description: "The Terse URL shortener."
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
  title: "terseurl"
  version: "0.0.3"

tags:
  - description: "Endpoints to perform operations on Terse data."
    name: "api"
  - description: "Endpoints that serve frontend assets."
    name: "frontend"
  - description: "Endpoints that are publicly accessible."
    name: "public"
  - description: "Endpoints required by the system that are not public facing and do not affect Terse data."
    name: "system"

schemes:
  #  - "https"
  - "http"

paths:
  /api/alive:
    get:
      summary: "Used by Caddy or other reverse proxy to determine if the service is alive."
      description: "Used by Caddy or other reverse proxy to determine if the service is alive."
      operationId: "systemAlive"
      responses:
        200:
          description: "Service is alive."
      tags:
        - "system"

  /api/export:
    post:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Export Terse and Visits data for the given shortened URLs."
      description: "Export Terse and Visits data for the given shortened URLs. If shortenedURLs is null, then export all
      shortened URLs."
      operationId: "export"
      parameters:
        - description: "The shortened URLs to get the export for. If null, an export of all shortened URLs will be given."
          in: "body"
          name: "shortenedURLs"
          schema:
            type: "array"
            items:
              type: "string"
      responses:
        200:
          description: "The export was successfully retrieved."
          schema:
            additionalProperties:
              $ref: "#/definitions/Export"
              x-nullable: true
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      tags:
        - "api"

  /api/frontend/meta:
    post:
      consumes:
        - "application/json"
      summary: "Used by the frontend to inherit HTML meta for social media link previews."
      description: "This endpoint is intended for use only by the frontend. It will perform an HTTP GET request to the
      originalURL, extract all meta tag information for social media link previews, then return it."
      operationId: "frontendMeta"
      parameters:
        - description: "The original URL to HTTP GET and extract the relevant HTML meta from for social media link
        previews."
          in: "body"
          name: "originalURL"
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "The relevant HTML meta tag information."
          schema:
            type: "object"
            properties:
              og:
                $ref: "#/definitions/OpenGraph"
              twitter:
                $ref: "#/definitions/Twitter"
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      tags:
        - "api"

  /api/import:
    post:
      consumes:
        - "application/json"
      summary: "Import existing Terse and Visits data for the given shortened URLs."
      description: "Any imported data will overwrite existing data. Unless deletion information is specified. In that
      case all Terse or Visits data can be deleted before importing the new data."
      operationId: "import"
      parameters:
        - description: "A JSON object containing the deletion information. If Terse or Visits data is marked for
        deletion, it will all be deleted. An object matching shortened URLs to their previously exported data is also
        required."
          in: "body"
          name: "import"
          required: true
          schema:
            additionalProperties:
              $ref: "#/definitions/Export"
              x-nullable: true
      responses:
        200:
          description: "The import request was successfully fulfilled."
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      tags:
        - "api"

  /api/prefix:
    get:
      summary: "Client's web browser is requesting what HTTP prefix all shortened URLs have."
      description: "Provides the HTTP prefix all shortened URLs have."
      operationId: "shortenedPrefix"
      responses:
        200:
          description: "The HTTP prefix all shortened URLs have."
          schema:
            type: "string"
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      tags:
        - "api"

  /api/summary:
    post:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Provide Summary data for the requested shortened URLs."
      description: "Summary data includes the shortened URL, the original URL, the type of redirect, and the
      number of visits."
      operationId: "shortenedSummary"
      parameters:
        - description: "The array of shortened URLs to get Summary data for. If none is provided, all will
        summaries will be returned."
          in: "body"
          name: "shortenedURLs"
          schema:
            type: "array"
            items:
              type: "string"
      responses:
        200:
          description: "The map of shortened URLs to Summary data."
          schema:
            additionalProperties:
              $ref: "#/definitions/Summary"
              x-nullable: true
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      tags:
        - "api"

  /api/shortened:
    delete:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Delete all assets for the given shortened URLs."
      description: "Delete all assets for the given shortened URLs. This includes all Terse data, Visits data, and
          Summary data."
      operationId: "shortenedDelete"
      parameters:
        - description: "The shortened URLs whose data should be deleted."
          in: "body"
          name: "shortenedURLs"
          required: true
          schema:
            type: "array"
            items:
              type: "string"
      responses:
        200:
          description: "The shortened URL's data was successfully deleted from the backend storage."
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      tags:
        - "api"

  /api/terse:
    post:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Read the Terse data for the given shortened URL."
      description: "Read the Terse data for the given shortened URL."
      operationId: "terseRead"
      parameters:
        - description: "The shortened URLs to read the Terse data for."
          in: "body"
          name: "shortenedURLs"
          required: true
          schema:
            type: "array"
            items:
              type: "string"
      responses:
        200:
          description: "The Terse data was successfully retrieved."
          schema:
            additionalProperties:
              $ref: "#/definitions/Terse"
              x-nullable: true
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      tags:
        - "api"

  /api/visits:
    # TODO Create an endpoint that allows for the selective deletion of Visits data.
    delete:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Delete all Visits data for the given shortened URLs."
      description: "Delete all Visits data for the given shortened URLs. This will affect Summary data."
      operationId: "visitsDelete"
      parameters:
        - description: "The shortened URLs whose Visits data should be deleted."
          in: "body"
          name: "shortenedURLs"
          required: true
          schema:
            type: "array"
            items:
              type: "string"
      responses:
        200:
          description: "The shortened URL's Visits data was successfully deleted from the backend storage."
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      tags:
        - "api"
    post:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Read the Visits data for the given shortened URLs."
      description: "Read the Visits data for the given shortened URLs."
      operationId: "visitsRead"
      parameters:
        - description: "The shortened URLs to read the Visits data for."
          in: "body"
          name: "shortenedURLs"
          required: true
          schema:
            type: "array"
            items:
              type: "string"
      responses:
        200:
          description: "The Visits data was successfully retrieved."
          schema:
            additionalProperties:
              type: "array"
              items:
                $ref: "#/definitions/Visit"
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      tags:
        - "api"

  /api/write/{operation}: # TODO Include blurb about how including social media link preview will cause 200 instead of 302.
    post:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      summary: "Perform a write operation on Terse data for a given shortened URL."
      description: '"insert" will fail if the shortened URL already exists. "update" will fail if the shortened URL does
      not already exist. "upsert" will only fail if there is a failure interacting with the underlying storage. If no
      shortened URL is included in the given Terse data, one will be generated randomly and returned in the response.'
      operationId: "terseWrite"
      parameters:
        - description: "The Terse data, with an optional shortened URL. If no shortened URL is given, one will be
        generated randomly and returned in the response. If no redirect type is given, 302 is used."
          in: "body"
          name: "terse"
          required: true
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TerseInput"
        - description: "The write operation to perform with the Terse data."
          in: "path"
          enum:
            - "insert"
            - "update"
            - "upsert"
          name: "operation"
          required: true
          type: "string"
      responses:
        200:
          description: "The map of shortened URLs to written Terse data."
          schema:
            description: "The shortened URL affected."
            additionalProperties:
              $ref: "#/definitions/Terse"
              x-nullable: true
        default:
          description: "Unexpected error."
          schema:
            $ref: "#/definitions/Error"
      tags:
        - "api"

  # IDs are always 9 characters or greater, so they can be put at the base path as long as all other paths are 8
  # characters or less.
  /{shortenedURL}:
    get:
      summary: "Typically a web browser would visit this endpoint, then get redirected."
      description: "Use the shortened URL. It will redirect to the full URL if it has not expired."
      operationId: "publicRedirect"
      produces:
        - "text/html"
      parameters:
        - in: "path"
          name: "shortenedURL"
          required: true
          type: "string"
      responses: # TODO Add 200 response for when social media link previews are enabled.
        200:
          description: "The HTML document containing a social media link preview and or JavaScript fingerprinting. Any
          visitor will be automatically redirected to the original link with JavaScript."
          schema:
            type: "file"
        301:
          description: "An HTTP response that will server as a permanent redirect to the shortened URL's full URL."
          headers:
            Location:
              description: "The full URL that the redirect leads to."
              type: "string"
        302:
          description: "An HTTP response that will serve as a temporary redirect to the shortened URL's full URL."
          headers:
            Location:
              description: "The full URL that the redirect leads to."
              type: "string"
        404:
          description: "The shortened URL expired or never existed."
      tags:
        - "public"

  /frontend/{fileName}:
    get:
      summary: "Files for the web frontend."
      description: "Frontend static assets: HTML, JS, etc are returned."
      operationId: "frontendStatic"
      produces:
        - "text/html"
        - "text/css"
        - "text/javascript"
      parameters:
        - in: "path"
          name: "fileName"
          required: true
          type: "string"
      responses: # TODO Add 200 response for when social media link previews are enabled.
        200:
          description: "The frontend asset."
          schema:
            type: "file"
        404:
          description: "The file was not found."
      tags:
        - "frontend"


definitions:

  # Schema for Terse export. It contains Terse and Visits data for a shortened URL.
  Export:
    properties:
      terse:
        $ref: "#/definitions/Terse"
      visits:
        type: "array"
        items:
          $ref: "#/definitions/Visit"
    type: "object"

  # Schema for error response body.
  Error:
    properties:
      code:
        type: "integer"
        x-nullable: false
      message:
        type: "string"
        x-nullable: false
    required:
      - "code"
      - "message"
    type: "object"

  # Schema for social media previews.
  MediaPreview:
    properties:
      og:
        $ref: "#/definitions/OpenGraph"
      title:
        type: "string"
      twitter:
        $ref: "#/definitions/Twitter"

  # Schema for Open Graph protocol HTML meta tag info.
  OpenGraph:
    additionalProperties:
      type: "string"

  # Enum for shortened URL redirect types.
  RedirectType:
    enum:
      - "301"
      - "302"
      - "meta"
      - "js"
    type: "string"

  # Schema for summary data on a specific shortened URL.
  Summary:
    properties:
      terse:
        $ref: "#/definitions/TerseSummary"
      visits:
        $ref: "#/definitions/VisitsSummary"

  # Schema for a Terse URL, which represented a shortened URL and original pair plus metadata.
  Terse:
    properties:
      javascriptTracking:
        type: "boolean"
      originalURL:
        type: "string"
        x-nullable: false
      mediaPreview:
        $ref: "#/definitions/MediaPreview"
      redirectType:
        $ref: "#/definitions/RedirectType"
      shortenedURL:
        type: "string"
        x-nullable: false
    required:
      - "originalURL"
      - "shortenedURL"

  # Schema for input Terse data. The shortened URL is optional.
  TerseInput:
    properties:
      javascriptTracking:
        type: "boolean"
      mediaPreview:
        $ref: "#/definitions/MediaPreview"
      originalURL:
        x-nullable: false
        type: "string"
      redirectType:
        $ref: "#/definitions/RedirectType"
      shortenedURL:
        type: "string"
    required:
      - "originalURL"
    x-nullable: false

  # Schema for summarizing Terse data.
  TerseSummary:
    properties:
      originalURL:
        type: "string"
      shortenedURL:
        type: "string"
      redirectType:
        $ref: "#/definitions/RedirectType"

  # Schema for Twitter HTML meta tags.
  Twitter:
    additionalProperties:
      type: "string"

  # Schema for tracking visits to shortened links.
  Visit:
    properties:
      accessed:
        type: "string"
        format: "date-time"
      ip:
        type: "string"
      headers:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
    x-nullable: false
    required:
      - "accessed"
      - "ip"


  # Schema for summarizing Visits data.
  VisitsSummary:
    properties:
      visitCount:
        type: "integer"
        format: "uint" # TODO Remove or change?